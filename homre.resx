<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>